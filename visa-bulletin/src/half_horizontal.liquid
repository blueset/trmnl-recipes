<div class="gap--space-between layout layout--col">
  <div class="grid h-full">
    <div class="gap--space-between col--span-3 col">
      <div class="gap--[9px] grid grid--cols-2" data-adjust-grid-gaps="false">
        <div class="item">
          <div class="meta"></div>
          <div class="content">
            <span class="value" data-value-fit="true">{{ action_date | date: "%Y-%m-%d" }}</span>
            <span class="label">Action date</span>
          </div>
        </div>
        <div class="item">
          <div class="meta"></div>
          <div class="content">
            <span class="value" data-value-fit="true">{{ filing_date | date: "%Y-%m-%d" }}</span>
            <span class="label">Filing date</span>
          </div>
        </div>
      </div>
      <div class="divider"></div>
      <div class="grid grid--cols-2">
        <div class="item">
          <div class="meta"></div>
          <div class="content">
            <span class="value value--xsmall value--tnums">{% if action_date_delta >= 0 %}+{% endif %}{{ action_date_delta }}d</span>
            <span class="label">From {{ action_date_prev | date: "%Y-%m-%d" }}</span>
          </div>
        </div>
        <div class="item">
          <div class="meta"></div>
          <div class="content">
            <span class="value value--xsmall value--tnums">{% if filing_date_delta >= 0 %}+{% endif %}{{ filing_date_delta }}d</span>
            <span class="label">From {{ filing_date_prev | date: "%Y-%m-%d" }}</span>
          </div>
        </div>
      </div>
      <div class="divider"></div>
      <div class="grid grid grid--cols-2">
        <div class="item">
          <div class="meta"></div>
          <div class="content">
            <span class="value value--xxsmall value--tnums" data-value-type="date">
              <div class="bg--gray-5 mb--2 w--12 h--1.5"></div>
              <span class="filing-date-left"></span> left
            </span>
          </div>
        </div>
        <div class="item">
          <div class="meta"></div>
          <div class="content">
            <span class="value value--xxsmall value--tnums" data-value-type="date">
              <div class="bg--black mb--2 w--12 h--1.5" style="border-radius: 20px;"></div>
              <span class="action-date-left"></span> left
            </span>
          </div>
        </div>
      </div>
    </div>
    <div class="gap--space-between col--span-3 col">
      <div id="chart-1221f8c9e95f" class="w--full" data-highcharts-chart="7" style="overflow: hidden;"></div>

      <script src="https://usetrmnl.com/js/highcharts/12.3.0/highcharts.js"></script>
      <script src="https://usetrmnl.com/js/highcharts/12.3.0/highcharts-more.js"></script>
      <script src="https://usetrmnl.com/js/highcharts/12.3.0/pattern-fill.js"></script>

      <script type="text/javascript">
        var actionDates = {{ data[history_key][category][action_date_key] | json }};
        var filingDates = {{ data[history_key][category][filing_date_key] | json }};
        var lookBackMonths = {{ look_back_months }};
        var currentMonth = {{ data.current_month | json }};
        var targetDate = {{ target_date | json }};
        var targetDateValue = (new Date(`${targetDate}T00:00:00`)).valueOf();

        function formatTimeDelta(fromDate, toDate) {
          if (!fromDate || !toDate) return '';
          var from = new Date(fromDate + 'T00:00:00');
          var to = new Date(toDate + 'T00:00:00');
          var diff = to - from;
          if (isNaN(diff)) return '?';
          var days = Math.floor(diff / (1000 * 60 * 60 * 24));
          var years = Math.floor(days / 365);
          var months = Math.floor((days % 365) / 30);
          var remDays = days - years * 365 - months * 30;
          if (years > 0) {
            var str = `${years}y${months ? ' ' + months + 'm' : ''}`;
            return str;
          } else if (months > 0) {
            var str = `${months}m${remDays ? ' ' + remDays + 'd' : ''}`;
            return str;
          } else {
            return `${days}d`;
          }
        }

        var root = document.currentScript.closest('.view');
        var actionDateLeft = root.querySelector('.action-date-left');
        var filingDateLeft = root.querySelector('.filing-date-left');
        actionDateLeft.textContent = formatTimeDelta(actionDates[actionDates.length - 1], targetDate);
        filingDateLeft.textContent = formatTimeDelta(filingDates[filingDates.length - 1], targetDate);
        
        var xAxisMonths = [currentMonth];
        for (var i = 1; i < lookBackMonths; i++) {
          var date = new Date(`${currentMonth}T00:00:00`);
          date.setMonth(date.getMonth() - i);
          xAxisMonths.push(date.toISOString().split('T')[0]);
        }
        xAxisMonths.reverse();

        actionDates = actionDates.slice(-lookBackMonths);
        filingDates = filingDates.slice(-lookBackMonths);

        var data = [
          {"name":"Action date","data": actionDates.map((date, index) => [xAxisMonths[index], (new Date(`${date}T00:00:00`)).valueOf()])},
          {"name":"Filing date","data": filingDates.map((date, index) => [xAxisMonths[index], (new Date(`${date}T00:00:00`)).valueOf()])}
        ];
        
        Highcharts.chart('chart-1221f8c9e95f', {
          chart: { 
            type: 'spline',
            height: 180,
            width: 376,
            animation: false,
            spacing: [10, 0, 10, 0]
          },
          title: {
            text: null
          },
          plotOptions: {
            series: {
              animation: false,
              enableMouseTracking: false,
              states: {
                hover: { enabled: false }
              },
              marker: {
                enabled: false
              }
            }
          },
          series: [{
            data: data[0].data,
            lineWidth: 4,
            color: '#000000',
            name: data[0].name,
            zIndex: 2
          }, {
            data: data[1].data,
            lineWidth: 5,
            name: data[1].name,
            zIndex: 1,
            color: {
              pattern: {
                image: 'https://usetrmnl.com/images/grayscale/gray-5.png',
                width: 12,
                height: 12
              }
            }
          }],
          tooltip: { enabled: false },
          legend: { enabled: false },
          yAxis: { 
            type: 'datetime',
            format: '%Y-%m',
            labels: { 
              style: { fontSize: '16px', color: '#000000' }
            }, 
            gridLineDashStyle: 'shortdot', 
            gridLineWidth: 1, 
            gridLineColor: '#000000', 
            tickAmount: 5,
            startOnTick: false,
            endOnTick: false,
            max: targetDateValue,
            plotLines: [{
              color: '#000000',
              width: 1, 
              value: targetDateValue,
              label: {
                  text: `Target: ${targetDate}`,
                  align: 'right',
                  verticalAlign: 'bottom',
                  textAlign: 'right',
                  x: 0,
                  y: 15,
                  style: {fontFamily: "NicoPups, sans-serif", fontSize: '16px'},
              }
            }],
            title: {
              text: null
            }
          },
          xAxis: { 
            type: 'datetime', 
            labels: { 
              style: { fontSize: '16px', color: '#000000' },
              padding: 5,
              y: 25
            }, 
            lineWidth: 0, 
            gridLineDashStyle: 'dot', 
            tickWidth: 1, 
            tickLength: 0, 
            gridLineWidth: 1, 
            gridLineColor: '#000000', 
            tickPixelInterval: 120,
            offset: 0,
            margin: 0,
            title: {
              text: null
            }
          },
          credits: {
            enabled: false
          }
        });
      </script>
    </div>
  </div>
</div>

<div class="title_bar">
  <img class="image" src="https://usetrmnl.com/images/plugins/trmnl--render.svg">
  <span class="title">{{ trmnl.plugin_settings.instance_name }} of {{ data.current_month | date: "%Y-%m" }}</span>
  <span class="instance">{{ region | upcase }} {{ category }}</span>
</div>