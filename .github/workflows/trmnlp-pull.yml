name: Run TRMNLP Pull

on:
  workflow_dispatch:
  schedule:
    # Run daily at 00:00 UTC
    - cron: '0 0 * * *'

jobs:
  trmnlp-pull:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Check for existing PR branch
        id: check-branch
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH_NAME="trmnlp-pull-updates"
          # Check if branch exists remotely
          if git ls-remote --heads origin "$BRANCH_NAME" \
            | grep -q "$BRANCH_NAME"; then
            echo "Branch $BRANCH_NAME exists, checking for associated PR"
            # Check if there's an open PR for this branch
            PR_COUNT=$(gh pr list --head "$BRANCH_NAME" --state open --json number --jq 'length')
            if [ "$PR_COUNT" -eq "0" ]; then
              echo "No active PR found for branch $BRANCH_NAME, deleting and recreating"
              # Delete the branch from remote
              git push origin --delete "$BRANCH_NAME"
              # Delete local branch if it exists
              git branch -D "$BRANCH_NAME" 2>/dev/null || true
              # Create new branch from the current context branch
              git checkout -b "$BRANCH_NAME"
              echo "branch_exists=false" >> $GITHUB_OUTPUT
            else
              echo "Active PR exists for branch $BRANCH_NAME, checking it out"
              git fetch origin "$BRANCH_NAME"
              git checkout "$BRANCH_NAME"
              echo "branch_exists=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "Branch $BRANCH_NAME does not exist, creating it"
            git checkout -b "$BRANCH_NAME"
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
      - name: Find and process plugins
        env:
          TRMNL_API_KEY: ${{ secrets.TRMNL_API_KEY }}
        run: |
          # Find all directories containing .trmnlp.yml
          PLUGIN_DIRS=$(find . -name ".trmnlp.yml" -type f \
            -exec dirname {} \; | sort)
          if [ -z "$PLUGIN_DIRS" ]; then
            echo "No .trmnlp.yml files found"
            exit 0
          fi
          echo "Found plugin directories:"
          echo "$PLUGIN_DIRS"
          # Process each plugin directory
          for dir in $PLUGIN_DIRS; do
            echo "Processing $dir"
            cd "$dir"
            # Run trmnlp pull with the TRMNL_API_KEY environment variable
            docker run --rm \
              --volume "$(pwd):/plugin" \
              --env TRMNL_API_KEY="${TRMNL_API_KEY}" \
              trmnl/trmnlp pull -f
            cd - > /dev/null
          done
      - name: Check for changes
        id: check-changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Check if there are any changes
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git add .
          git commit -m "Update plugin files via trmnlp pull"
          git push origin ${{ steps.check-branch.outputs.branch_name }}
      - name: Create Pull Request
        if: >
          steps.check-changes.outputs.has_changes == 'true' &&
          steps.check-branch.outputs.branch_exists == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:` +
                `${{ steps.check-branch.outputs.branch_name }}`,
              state: 'open'
            });
            if (pullRequests.length === 0) {
              await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Update plugin files via trmnlp pull',
                head: '${{ steps.check-branch.outputs.branch_name }}',
                base: 'master',
                body: 'This PR contains automated updates from running ' +
                  '`trmnlp pull` on all plugins.\n\n' +
                  'Generated by GitHub Actions workflow.'
              });
              console.log('Pull request created');
            } else {
              console.log('Pull request already exists');
            }
