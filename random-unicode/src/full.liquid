{% if error %}
<div class="layout">
  <div class="column flex--center-x text--center">
    <span class="title">Error</span>
    <p class="title title--small">{{ error }}</p>
  </div>
</div>
<script>
  window.TRMNL_SKIP_SCREEN_GENERATION = true;
</script>
{% else %}
<style>
  /* Ari-W9500 Regular */
  @font-face {
    font-family: 'Ari-W9500';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  /* Ari-W9500 Bold */
  @font-face {
    font-family: 'Ari-W9500';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-bold.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
  }
  
  /* Ari-W9500 Condensed */
  @font-face {
    font-family: 'Ari-W9500 Condensed';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-condensed.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-condensed.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  /* Ari-W9500 Condensed Bold */
  @font-face {
    font-family: 'Ari-W9500 Condensed';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-condensed-bold.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-condensed-bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
  }
  
  /* Ari-W9500 Condensed Display */
  @font-face {
    font-family: 'Ari-W9500 Condensed Display';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-condensed-display.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-condensed-display.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  /* Ari-W9500 Display */
  @font-face {
    font-family: 'Ari-W9500 Display';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-display.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/ari-w9500-display.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Pixelbasel';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/Pixelbasel.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/Pixelbasel.ttf') format('truetype');
    font-display: swap;
  }

  /* MotaPixel Regular */
  @font-face {
    font-family: 'MotaPixel';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/MotaPixel-Regular.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/MotaPixel-Regular.otf') format('opentype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  /* MotaPixel Bold */
  @font-face {
    font-family: 'MotaPixel';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/MotaPixel-Bold.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/MotaPixel-Bold.otf') format('opentype');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
  }
  
  /* MotaPixel Light */
  @font-face {
    font-family: 'MotaPixel';
    src: url('https://blueset.github.io/wikipedia-featured/fonts/MotaPixel-Light.woff2') format('woff2'),
         url('https://blueset.github.io/wikipedia-featured/fonts/MotaPixel-Light.otf') format('opentype');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
  }
  
  .character {
    position: relative;
    svg {
      width: 100%;
      overflow: visible;
    }
    span {
      position: absolute !important;
      left: 0;
      bottom: 0;
      transform: translateY(100%);
    }
  }
  .descriptions {
    display: grid;
    grid-template-columns: auto minmax(200px, 1fr);
    gap: 0px 20px;
    align-items: start;
    .label {
      text-transform: uppercase;
      font-weight: bold;
    }
  }
  .label--small, .description {
    font-family: 'Ari-W9500', sans-serif;
    font-size: 11px;
    line-height: 14px;
  }
  .description.narrow, .narrow {
    font-family: 'Ari-W9500 Condensed', sans-serif;
  }
  .character svg {
    aspect-ratio: 1 / 1;
  }
  .description.large {
    /* font-family: 'Pixelbasel', sans-serif;
    font-size: 16px;
    line-height: 20px; */
    
    font-family: 'MotaPixel', sans-serif;
    font-size: 20px;
    font-weight: 300;
    p {
      line-height: 20px;
    }
    u, strong {
      /* font-weight: normal;
      letter-spacing: 1px;
      text-shadow: 1px 0px 0px black; */
      font-weight: bold;
      text-decoration: none;
    }
    em {
      text-decoration: underline;
      font-style: normal;
    }
  }
  .characters:has(.character:nth-child(2)) {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px 10px;
  }

  .properties {
    gap: 5px;
    grid-column: span 2;
    display: flex;
    flex-wrap: wrap;
    align-items: baseline;
    .property-group-key {
      font-family: "Ari-W9500", sans-serif;
      font-weight: bold;
      font-size: 11px;
      line-height: 14px;
    }
    .property {
      font-family: "Ari-W9500", sans-serif;
      font-size: 11px;
      line-height: 14px;
      border-radius: 5px;
      border: 1px solid #444;
      display: inline-flex;
      .property-key {
        padding: 2px 4px;
      }
      .property-value {
        color: white;
        padding: 2px 4px;
        border-radius: 0 3px 3px 0;
      }
    }
  }
  .layout {
    display: grid !important;
    grid-template-columns: 2fr 5fr;
    gap: 40px 20px !important;
    align-content: center;
  }
  .clamp--4, .clamp--3 {
    word-break: auto-phrase !important; 
  }
  .title_bar .title {
    width: 0;
    flex-grow: 1;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .title_bar .instance {
    flex-grow: 0;
  }
</style>

<div class="layout">
      
  <div class="characters">
    {% for svg in svgs %}
      <div class="character">
        {{ svg.svg }}
        <span class="label label--small">{{ svg.font }}</span>
      </div>
    {% endfor %}
  </div>

  <div class="details">
    <div class="descriptions">
      {% for description in descriptions %}
        <span class="text--gray-40 label label--small narrow">{{ description.title }}</span>
        <div class="description {% if description.title == "Codepoint" or description.title == "Character" %} large{% endif %}{% if description.title == "Wikipedia (en)" %} narrow{% endif %}"{% if description.title == "Wikipedia (en)" %} data-clamp="6"{% endif %}>{{ description.html }}</div>
      {% endfor %}
    </div>
  </div>
  <div class="properties">
    {% if meta.AHex == 1 %}<div class="property"><span class="property-key">ASCII hex</span></div>{% endif %}
    {% if meta.Hex == 1 %}<div class="property"><span class="property-key">Hex digit</span></div>{% endif %}
    {% if meta.Alpha == 1 %}<div class="property"><span class="property-key">Alphabetic</span></div>{% endif %}
    {% if meta.Bidi_C == 1 %}<div class="property"><span class="property-key">Bidi control</span></div>{% endif %}
    {% if meta.Bidi_M == 1 %}<div class="property"><span class="property-key">Bidi mirrored</span></div>{% endif %}
    {% if meta.CE == 1 %}<div class="property"><span class="property-key">Composition Exclusion</span></div>{% endif %}
    {% if meta.CI == 1 %}<div class="property"><span class="property-key">Case ignorable</span></div>{% endif %}
    {% if meta.Cased == 1 %}<div class="property"><span class="property-key">Cased</span></div>{% endif %}
    {% if meta.Comp_Ex == 1 %}<div class="property"><span class="property-key">Full composition exclusion</span></div>{% endif %}
    {% if meta.DI == 1 %}<div class="property"><span class="property-key">Default ignorable</span></div>{% endif %}
    {% if meta.Dia == 1 %}<div class="property"><span class="property-key">Diacritic</span></div>{% endif %}
    {% if meta.Dep == 1 %}<div class="property"><span class="property-key">Deprecated</span></div>{% endif %}
    {% if meta.Ext == 1 %}<div class="property"><span class="property-key">Extender</span></div>{% endif %}
    {% if meta.Join_C == 1 %}<div class="property"><span class="property-key">Join control</span></div>{% endif %}
    {% if meta.LOE == 1 %}<div class="property"><span class="property-key">Logical order exception</span></div>{% endif %}
    {% if meta.MCM == 1 %}<div class="property"><span class="property-key">Modifier combining mark</span></div>{% endif %}
    {% if meta.Math == 1 %}<div class="property"><span class="property-key">Math</span></div>{% endif %}
    {% if meta.NChar == 1 %}<div class="property"><span class="property-key">Non-character</span></div>{% endif %}
    {% if meta.PCM == 1 %}<div class="property"><span class="property-key">Prepended concatenation mark</span></div>{% endif %}
    {% if meta.Pat_Syn == 1 %}<div class="property"><span class="property-key">Pattern syntax</span></div>{% endif %}
    {% if meta.Pat_WS == 1 %}<div class="property"><span class="property-key">Pattern white space</span></div>{% endif %}
    {% if meta.RI == 1 %}<div class="property"><span class="property-key">Regional indicator</span></div>{% endif %}
    {% if meta.SD == 1 %}<div class="property"><span class="property-key">Soft dotted</span></div>{% endif %}
    {% if meta.STerm == 1 %}<div class="property"><span class="property-key">Sentence terminal</span></div>{% endif %}
    {% if meta.VS == 1 %}<div class="property"><span class="property-key">Variation selector</span></div>{% endif %}
    {% if meta.WSpace == 1 %}<div class="property"><span class="property-key">White space</span></div>{% endif %}

    {% if meta.GCB != "XX" %}<div class="property"><span class="property-key">Grapheme cluster break</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.GCB_NAME }}</span></div>{% endif %}
    {% if meta.WB != "XX" and meta.WB != "LE" %}<div class="property"><span class="property-key">Word break</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.WB_NAME }}</span></div>{% endif %}
    {% if meta.SB != "XX" and meta.SB != "LE" %}<div class="property"><span class="property-key">Sentence break</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.SB_NAME }}</span></div>{% endif %}
    {% if meta.bc != "L" %}<div class="property"><span class="property-key">Bidi class</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.bc_NAME }}</span></div>{% endif %}
    {% if meta.bpt != "n" %}<div class="property"><span class="property-key">Bidi paired bracket</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.bpt_NAME }}</span></div>{% endif %}
    {% if meta.cp != meta.dm %}<div class="property"><span class="property-key">Decomp.</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">U+{{ meta.dm_HEX | join: ", " }} {{ meta.dt_NAME }}</span></div>{% endif %}
    {% if meta.ea != "N" %}<div class="property"><span class="property-key">E. Asian Wid.</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.ea_NAME }}</span></div>{% endif %}
    {% if meta.hst != "NA" %}<div class="property"><span class="property-key">Hangul Syllable</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.hst_NAME }}</span></div>{% endif %}
    {% if meta.jt != "U" %}<div class="property"><span class="property-key">Joining</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.jt_NAME }}</span></div>{% endif %}
    {% if meta.nt != "None" %}<div class="property"><span class="property-key">Numeric</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.nt_NAME }}</span></div>{% endif %}
    {% if meta.ccc != 0 %}<div class="property"><span class="property-key">Canonical combining</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.ccc_NAME }}</span></div>{% endif %}

    {%  if 
      meta.Dash == 1 or
      meta.Hyphen == 1 or
      meta.QMark == 1 or
      meta.Term == 1
    %}<span class="property-group-key">Punctuation</span>{% endif %}
    {% if meta.Dash == 1 %}<div class="property"><span class="property-key">Dash</span></div>{% endif %}
    {% if meta.Hyphen == 1 %}<div class="property"><span class="property-key">Hyphen</span></div>{% endif %}
    {% if meta.QMark == 1 %}<div class="property"><span class="property-key">Quotation mark</span></div>{% endif %}
    {% if meta.Term == 1 %}<div class="property"><span class="property-key">Terminal punctuation</span></div>{% endif %}

    {% if 
      meta.Emoji == 1 or
      meta.EPres == 1 or
      meta.EMod == 1 or
      meta.EBase == 1 or
      meta.EComp == 1 or
      meta.ExtPict == 1
    %}<span class="property-group-key">Emoji</span>{% endif %}
    {% if meta.Emoji == 1 %}<div class="property"><span class="property-key">Emoji</span></div>{% endif %}
    {% if meta.EPres == 1 %}<div class="property"><span class="property-key">Emoji presentation</span></div>{% endif %}
    {% if meta.EMod == 1 %}<div class="property"><span class="property-key">Emoji modifier</span></div>{% endif %}
    {% if meta.EBase == 1 %}<div class="property"><span class="property-key">Emoji modifier base</span></div>{% endif %}
    {% if meta.EComp == 1 %}<div class="property"><span class="property-key">Emoji component</span></div>{% endif %}
    {% if meta.ExtPict == 1 %}<div class="property"><span class="property-key">Extended Pictographic</span></div>{% endif %}

    {% if
      meta.Gr_Base == 1 or
      meta.Gr_Ext == 1
    %}<span class="property-group-key">Grapheme</span>{% endif %}
    {% if meta.Gr_Base == 1 %}<div class="property"><span class="property-key">Grapheme base</span></div>{% endif %}
    {% if meta.Gr_Ext == 1 %}<div class="property"><span class="property-key">Grapheme extender</span></div>{% endif %}

<!--
    {% 
      if meta.IDS == 1 or
      meta.XIDS == 1 or
      meta.IDC == 1 or
      meta.XIDC == 1
     %}<span class="property-group-key">Identifier</span>{% endif %}
    {% if meta.IDS == 1 %}<div class="property"><span class="property-key">ID Start</span></div>{% endif %}
    {% if meta.XIDS == 1 %}<div class="property"><span class="property-key">XID Start</span></div>{% endif %}
    {% if meta.IDC == 1 %}<div class="property"><span class="property-key">ID Continue</span></div>{% endif %}
    {% if meta.XIDC == 1 %}<div class="property"><span class="property-key">XID Continue</span></div>{% endif %}
-->
    
    {% if 
      meta.cp != meta.lc or
      meta.cp != meta.uc or
      meta.cp != meta.tc or
      meta.cp != meta.NFKC_CF
    %}<span class="property-group-key">Casing</span>{% endif %}
    {% if meta.cp != meta.lc %}<div class="property"><span class="property-key">Lowercase</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">U+{{ meta.lc_HEX }}</span></div>{% endif %}
    {% if meta.cp != meta.uc %}<div class="property"><span class="property-key">Uppercase</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">U+{{ meta.uc_HEX }}</span></div>{% endif %}
    {% if meta.cp != meta.tc %}<div class="property"><span class="property-key">Titlecase</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">U+{{ meta.tc_HEX }}</span></div>{% endif %}
    {% if meta.cp != meta.NFKC_CF %}<div class="property"><span class="property-key">NFKC Casefold</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">U+{{ meta.NFKC_CF_HEX | join: ", " }}</span></div>{% endif %}

    {% if 
      (meta.unikemet.kEH_Desc and meta.unikemet.kEH_Desc != "") or
      (meta.unikemet.kEH_Func and meta.unikemet.kEH_Func != "")
    %}<span class="property-group-key">UniKemet</span>{% endif %}
    {% if (meta.unikemet.kEH_Func and meta.unikemet.kEH_Func != "") %}<div class="property"><span class="property-key">Function</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.unikemet.kEH_Func }}</span></div>{% endif %}
    {% if (meta.unikemet.kEH_Desc and meta.unikemet.kEH_Desc != "") %}<div class="property"><span class="property-key">Description</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.unikemet.kEH_Desc }}</span></div>{% endif %}

    {% if meta.JSN != "" %}<div class="property"><span class="property-key">Jamo short name</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.JSN }}</span></div>{% endif %}

    {% if 
      (meta.kMandarin and meta.kMandarin != "") or
      (meta.kCantonese and meta.kCantonese != "") or 
      (meta.kCangjie and meta.kCangjie != "") or
      (meta.kFourCornerCode and meta.kFourCornerCode != "") or
      (meta.kJapanese and meta.kJapanese != "") or
      (meta.kJapaneseOn and meta.kJapaneseOn != "") or
      (meta.kJapaneseKun and meta.kJapaneseKun != "") or
      (meta.kKorean and meta.kKorean != "") or
      (meta.kHangul and meta.kHangul != "") or
      (meta.kVietnamese and meta.kVietnamese != "") or
      (meta.kAccountingNumeric and meta.kAccountingNumeric != "") or
      (meta.kOtherNumeric and meta.kOtherNumeric != "") or
      (meta.kPrimaryNumeric and meta.kPrimaryNumeric != "") or
      (meta.kIRG_GSource and meta.kIRG_GSource != "") or
      (meta.kIRG_HSource and meta.kIRG_HSource != "") or
      (meta.kIRG_JSource and meta.kIRG_JSource != "") or
      (meta.kIRG_KPSource and meta.kIRG_KPSource != "") or
      (meta.kIRG_KSource and meta.kIRG_KSource != "") or
      (meta.kIRG_MSource and meta.kIRG_MSource != "") or
      (meta.kIRG_SSource and meta.kIRG_SSource != "") or
      (meta.kIRG_TSource and meta.kIRG_TSource != "") or
      (meta.kIRG_UKSource and meta.kIRG_UKSource != "") or
      (meta.kIRG_USource and meta.kIRG_USource != "") or
      (meta.kIRG_VSource and meta.kIRG_VSource != "") or
      (meta.kSimplifiedVariant and meta.kSimplifiedVariant != "") or
      (meta.kTraditionalVariant and meta.kTraditionalVariant != "") or
      (meta.kSemanticVariant and meta.kSemanticVariant != "") or
      (meta.kSpecializedSemanticVariant and meta.kSpecializedSemanticVariant != "") or
      (meta.kTotalStrokes and meta.kTotalStrokes != "") or
      meta.Ideo == 1 or
      meta.UIdeo == 1 or
      meta.IDSU == 1 or
      meta.IDSB == 1 or
      meta.IDST == 1 or
      meta.Radical == 1
    %}<span class="property-group-key">UniHan</span>{% endif %}
    {% if (meta.kMandarin and meta.kMandarin != "") %}<div class="property"><span class="property-key">Mandarin</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kMandarin }}</span></div>{% endif %}
    {% if (meta.kCantonese and meta.kCantonese != "") %}<div class="property"><span class="property-key">Cantonese</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kCantonese }}</span></div>{% endif %}
    {% if (meta.kCangjie and meta.kCangjie != "") %}<div class="property"><span class="property-key">Cangjie</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kCangjie }}</span></div>{% endif %}
    {% if (meta.kFourCornerCode and meta.kFourCornerCode != "") %}<div class="property"><span class="property-key">Four-corner</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kFourCornerCode }}</span></div>{% endif %}
    {% if (meta.kFanqie and meta.kFanqie != "") %}<div class="property"><span class="property-key">Fanqie</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kFanqie }}</span></div>{% endif %}
    {% if (meta.kHangul and meta.kHangul != "") or (meta.kKorean and meta.kKorean != "") %}<div class="property"><span class="property-key">Korean</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kKorean }} {{ meta.kHangul }}</span></div>{% endif %}
    {% if (meta.kJapanese and meta.kJapanese != "") or (meta.kJapaneseOn and meta.kJapaneseOn != "") or (meta.kJapaneseKun and meta.kJapaneseKun != "") %}<div class="property"><span class="property-key">Japanese</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kJapanese }} {{ meta.kJapaneseOn }} {{ meta.kJapaneseKun }}</span></div>{% endif %}
    {% if (meta.kVietnamese and meta.kVietnamese != "") %}<div class="property"><span class="property-key">Vietnamese</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kVietnamese }}</span></div>{% endif %}
    {% if (meta.kAccountingNumeric and meta.kAccountingNumeric != "")  or (meta.kOtherNumeric and meta.kOtherNumeric != "") or (meta.kPrimaryNumeric and meta.kPrimaryNumeric != "") %}<div class="property"><span class="property-key">Numeric</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kAccountingNumeric }} {{ meta.kOtherNumeric }} {{ meta.kPrimaryNumeric }}</span></div>{% endif %}
    {% if (meta.kIRG_GSource and meta.kIRG_GSource != "") %}<div class="property"><span class="property-key">G source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_GSource }}</span></div>{% endif %}
    {% if (meta.kIRG_HSource and meta.kIRG_HSource != "") %}<div class="property"><span class="property-key">H source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_HSource }}</span></div>{% endif %}
    {% if (meta.kIRG_JSource and meta.kIRG_JSource != "") %}<div class="property"><span class="property-key">J source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_JSource }}</span></div>{% endif %}
    {% if (meta.kIRG_KPSource and meta.kIRG_KPSource != "") %}<div class="property"><span class="property-key">KP source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_KPSource }}</span></div>{% endif %}
    {% if (meta.kIRG_KSource and meta.kIRG_KSource != "") %}<div class="property"><span class="property-key">K source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_KSource }}</span></div>{% endif %}
    {% if (meta.kIRG_MSource and meta.kIRG_MSource != "") %}<div class="property"><span class="property-key">M source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_MSource }}</span></div>{% endif %}
    {% if (meta.kIRG_SSource and meta.kIRG_SSource != "") %}<div class="property"><span class="property-key">S source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_SSource }}</span></div>{% endif %}
    {% if (meta.kIRG_TSource and meta.kIRG_TSource != "") %}<div class="property"><span class="property-key">T source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_TSource }}</span></div>{% endif %}
    {% if (meta.kIRG_UKSource and meta.kIRG_UKSource != "") %}<div class="property"><span class="property-key">UK source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_UKSource }}</span></div>{% endif %}
    {% if (meta.kIRG_USource and meta.kIRG_USource != "") %}<div class="property"><span class="property-key">U source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_USource }}</span></div>{% endif %}
    {% if (meta.kIRG_VSource and meta.kIRG_VSource != "") %}<div class="property"><span class="property-key">V source</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kIRG_VSource }}</span></div>{% endif %}
    {% if meta.kSimplifiedVariant and meta.kSimplifiedVariant != "" %}<div class="property"><span class="property-key">Simplified</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kSimplifiedVariant }}</span></div>{% endif %}
    {% if meta.kTraditionalVariant and meta.kTraditionalVariant != "" %}<div class="property"><span class="property-key">Traditional</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kTraditionalVariant }}</span></div>{% endif %}
    {% if meta.kSemanticVariant and meta.kSemanticVariant != "" %}<div class="property"><span class="property-key">Semantic</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kSemanticVariant }}</span></div>{% endif %}
    {% if meta.kSpecializedSemanticVariant and meta.kSpecializedSemanticVariant != "" %}<div class="property"><span class="property-key">Specialized semantic</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kSpecializedSemanticVariant }}</span></div>{% endif %}
    {% if meta.kRSUnicode and meta.kRSUnicode != "" %}<div class="property"><span class="property-key">Radical-Strokes</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">[{{ meta.kRSUnicode | replace: ".", "] + " }}</span></div>{% endif %}
    {% if meta.kTotalStrokes and meta.kTotalStrokes != "" %}<div class="property"><span class="property-key">Strokes</span><span class="property-value 2bit:bg--gray-30 1bit:bg--black">{{ meta.kTotalStrokes }}</span></div>{% endif %}
    {% if meta.Ideo == 1 %}<div class="property"><span class="property-key">Ideograph</span></div>{% endif %}
    {% if meta.UIdeo == 1 %}<div class="property"><span class="property-key">Unified ideograph</span></div>{% endif %}
    {% if meta.IDSU == 1 %}<div class="property"><span class="property-key">IDS unary op</span></div>{% endif %}
    {% if meta.IDSB == 1 %}<div class="property"><span class="property-key">IDS binary op</span></div>{% endif %}
    {% if meta.IDST == 1 %}<div class="property"><span class="property-key">IDS trinary op</span></div>{% endif %}
    {% if meta.Radical == 1 %}<div class="property"><span class="property-key">Radical</span></div>{% endif %}
  </div>
</div>

<div class="title_bar">
  <img class="image image--dither" src="https://www.svgrepo.com/show/349543/unicode.svg">
  <span class="title">{{ meta.na }}</span>
  <span class="instance">{{ codepoint }}</span>
</div>
{% endif %}